---
import Title from "../shared/Title.astro";
import { contactTopis } from "../../config/contact-topics";
import i18n from "i18next";
import Spinner from "../shared/Spinner.astro";
const lang = i18n.language;

type ContactFormType = {
  title: string;
  name: string;
  surname: string;
  email: string;
  description: string;
  terms: string;
  submit: string;
};
const { title, name, surname, email, description, terms, submit } =
  Astro.props as ContactFormType;
---

<article class="contact-form h-box-shadow">
  <div class="contact-form__title">
    <Title titleAlign="left" title={title} />
  </div>
  <form id="form">
    <input id="name" required type="text" placeholder={name} />
    <input id="surname" type="text" placeholder={surname} />
    <input
      id="email"
      required
      type="email"
      pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$"
      placeholder={email}
    />
    <select id="topic" required name="categorias">
      {
        contactTopis[lang].map((el) => {
          return <option value={el.value}>{el.label}</option>;
        })
      }
    </select>
    <textarea id="description" placeholder={description} required></textarea>
    <p>
      <input required type="checkbox" id="terms" />
      <label for="terms">
        {terms}
      </label>
    </p>
    <div class="contact-form__submit">
      <button id="submit" type="submit">{submit}</button>
      <div id="spinnnerContainer" class="contact-form__spinner">
        <Spinner />
      </div>
    </div>
  </form>
</article>

<style>
  @import "../../../styles/media-queries.css";

  .contact-form {
    background-color: var(--color-white);
    border-radius: var(--border-radius);
    padding: var(--space-medium);
    @media (--vp-media-desktop) {
      padding: var(--space-large);
    }
    &__title {
      margin-top: var(--space-medium);
      margin-bottom: var(--space-medium-2);
      @media (--vp-media-desktop) {
        margin-top: var(--space-large);
        margin-bottom: var(--space-large-4);
      }
    }
    &__submit {
      display: flex;
      justify-content: flex-end;
      margin-top: var(--space-large);
    }
    &__spinner {
      display: none;
    }
  }
  input,
  textarea,
  select {
    margin-bottom: var(--space-medium-2);
    @media (--vp-media-desktop) {
      margin-bottom: var(--space-large);
    }
  }

  input[type="email"],
  input[type="text"] {
    border-radius: var(--border-radius);
    border: none;
    width: 100%;
    padding: 0 30px;
    border: 1px solid var(--color-main);
    font-size: 21px;
    height: 48px;

    @media (--vp-media-desktop) {
      height: 64px;
    }
  }
  input[type="checkbox"] {
    margin: 0;
  }

  input::placeholder  {
    font-size: 21px;
  }

  button[type="submit"] {
    display: block;
    font-family: "rykerbold";
    box-shadow: 11px 17px 27px -5px rgba(0, 0, 0, 0.25);
    background-color: var(--color-main);
    border-radius: var(--border-radius);
    border: none;
    padding: var(--space-medium) var(--space-medium-2);
    color: var(--color-white);
    width: fit-content;
    text-align: center;
    font-size: 16px;
    cursor: pointer;

    @media (--vp-media-desktop) {
      font-size: 21px;
    }
  }
  textarea {
    width: 100%;
    border-radius: var(--border-radius);
    border: none;
    resize: none;
    height: 148px;
    padding: 20px 30px;
    font-size: 21px;
    border: 1px solid var(--color-main);
  }

  form > select {
    border-radius: var(--border-radius);
    border: none;
    width: 100%;
    height: 48px;

    padding: 0 30px;
    border: 1px solid var(--color-main);
    font-size: 21px;

    @media (--vp-media-desktop) {
      height: 64px;
    }
  }
  label {
    font-size: 14px;
    @media (--vp-media-desktop) {
      font-size: 18px;
    }
  }
  textarea::placeholder  {
    font-size: 21px;
  }
</style>

<script>
  const form = document.getElementById("form") as HTMLFormElement;
  const submitButton = document.getElementById("submit") as HTMLButtonElement;
  const spinnnerContainer = document.getElementById(
    "spinnnerContainer"
  ) as HTMLDivElement;

  form.addEventListener("submit", (e) => {
    e.preventDefault();

    const name = form.elements.name.value;
    const surname = form.elements.surname.value;
    const email = form.elements.email.value;
    const topic = form.elements.topic.value;
    const comment = form.elements?.description.value;

    const formBody: { [key: string]: string } = {
      first_name: name,
      last_name: surname || "",
      email,
      requested_service: topic,
      comment,
    };

    sendForm(formBody);
  });

  const sendForm = async (body: { [key: string]: string }) => {
    spinnnerContainer.style.display = "block";
    submitButton.style.display = "none";
    try {
      await fetch("https://api.kokualabs.com/landing/forms", {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(body),
      });
      window.location.href = window.location.pathname + "/success";
    } catch (error) {
      console.log(window);
      window.location.href = window.location.pathname + "/error";
    } finally {
      form.reset();
      spinnnerContainer.style.display = "none";
      submitButton.style.display = "block";
    }
  };
</script>
